// This code analysis the distribution of the ac current of 
// charge fluctuation generated by td_charge_flow. 
// To use this code, you must perform td_charge_flow.sce first. 
clear; clc; xdel(winsid()); exec(PiLib);
// Parameters ==========================================================
work_dir='C:\MyDrive\Work\CO_junc\E_kick\EL' // folder of tot_charge.sod
cal_type='current' // 'charge' or 'current'
tot_div=200;   // division of distribution
E_max=10       // E max
dE=0.001       // dE in FT
spec_den='on'  // plot spectral density (i.e. FT results)
// Main ================================================================
load(work_dir+'/tot_charge.sod');
select cal_type
case 'charge'
    bar_data=PIL_bar_plot(tot_charge(:,5),tot_div,'off')
    FT_data=PIL_FT_damp(tot_charge(:,[1,5]),E_max,dE)
case 'current'
    bar_data=PIL_bar_plot(tot_charge(:,9),tot_div,'off')
    FT_data=PIL_FT_damp(tot_charge(:,[1,9]),E_max,dE)
end
data_avg=sum(bar_data(:,1).*bar_data(:,2))/tot_div

// gaussian fitting, p(1)=amp, p(2)=dev, p(3)=diff
function y=F_gaussian(p,x)
    y=p(1)*exp( -(x-p(3)).^2/(2*p(2).^2) );
endfunction

function e=F_err(p,z)
    e=z(2)-F_gaussian(p,z(1))
endfunction
bar_data(:,1)=-1000*bar_data(:,1); // <-- micro Amp !!!!!!!!!!!!!!!!!!!!!!!
p0=[sum(bar_data(:,2))/length(bar_data(:,1)),min(bar_data(:,1)),data_avg]'
[p,err]=datafit(F_err,bar_data',p0);
disp('amp='+string(p(1))+', sigma='+string(p(2))+', center='+string(p(3)))

// plot distributaion data
figure(1)
bar(bar_data(:,1),bar_data(:,2))
xlabel('ac current(mA)','font_size',4)
ylabel('counts','font_size',4)
plot(zeros(30,1),linspace(0,1.05*max(bar_data(:,2)),30)','r')
a=gce(); a.children.thickness=4;  
a.parent.x_ticks=tlist(["ticks" "locations", "labels"]..
, [min(bar_data(:,1)),0,max(bar_data(:,1))]..
, string([min(bar_data(:,1)),0,max(bar_data(:,1))])) 
plot(p(3)*ones(30,1),linspace(0,1.05*max(bar_data(:,2)),30)','g')
a=gce(); a.children.thickness=4;  


plot(bar_data(:,1),F_gaussian(p,bar_data(:,1)),'y')
a=gce(); a.children.thickness=4;  
set(gcf(),'background',8)
set(gca(),'thickness',4,'font_size',4);

// plot Fourier Transform 
figure(2)
select spec_den
case 'on'
    plot(FT_data(:,1),(abs(FT_data(:,2))).^2)
case 'off'
    plot(FT_data(:,1),abs(FT_data(:,2)))    
end
a=gce(); a.children.thickness=2; 
xlabel('energy (eV)','fontsize',4);
ylabel('spectral density','fontsize',4);
set(gcf(),'background',8)
set(gca(),'thickness',4,'font_size',4);

